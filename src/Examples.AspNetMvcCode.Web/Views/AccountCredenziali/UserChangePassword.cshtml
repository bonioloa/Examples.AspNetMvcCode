@model UserChangePasswordViewModel

@inject IMainLocalizer _localizer

@{
    Layout = MvcComponents.TemplateSecureAreaInnerGenericFile;

    ViewData.SetTitle(_localizer[nameof(LocalizedStr.UserChangePasswordFormPageTitle)]);
}
@section styles
{   
}
@section scripts
{
    <partial name="@MvcComponents.SharedPartialIncludeMinifiableLocalFile" 
             model=@(new IncludeLocalFilesViewModel() 
                         { 
                             Type = IncludeType.Javascript
                             , BasePath = PathsStaticFilesRoot.AppPathScriptsPages
                             , FileName= "change-password"
                         })/>
}

<partial name="@MvcComponents.SharedPartialTitlePageInSecureArea" 
         model="@_localizer[nameof(LocalizedStr.UserChangePasswordFormPageTitle)].ToString()"/>

<form asp-controller="@MvcComponents.CtrlAccountCredentials"
      asp-action="@MvcComponents.ActChangePassword"
      asp-antiforgery="true"
      method="post"
      autocomplete="off">

    @* no validation rule apart required, in case someone during configuration used a password 
        not compliant to standard regex*@
    <div class="row row-no-line-after">
        <div class="input-field col s12 m12 l12 xl12">

            @await Component.InvokeAsync(
                typeof(FieldInputTextSimpleComp)
                , new FieldViewModel()
                    { 
                        FieldType = FieldType.InputTextSimple,
                        InputSimpleType = InputSimpleType.Password,
                        FieldName = nameof(Model.OldPassword),
                        HideMandatorySymbol = true,
                        Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldOldPassword)]),
                    }
            )
        </div>
    </div>
        
    @* validation rule set by js  *@
    <div class="row row-no-line-after">
        <div class="input-field col s12 m12 l12 xl12">

            @await Component.InvokeAsync(
                typeof(FieldInputTextSimpleComp)
                , new FieldViewModel()
                    { 
                        FieldType = FieldType.InputTextSimple,
                        InputSimpleType = InputSimpleType.Password,
                        FieldName = nameof(Model.NewPassword),
                        HideMandatorySymbol = true,
                        Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldNewPassword)]),
                    }
            )
        </div>
    </div>


    @* validation rule set by js  *@
    <div class="row row-no-line-after">
        <div class="input-field col s12 m12 l12 xl12">

            @await Component.InvokeAsync(
                typeof(FieldInputTextSimpleComp)
                , new FieldViewModel()
                    { 
                        FieldType = FieldType.InputTextSimple,
                        InputSimpleType = InputSimpleType.Password,
                        FieldName = nameof(Model.ConfirmPassword),
                        HideMandatorySymbol = true,
                        Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldConfirmPassword)]),
                    }
            )
        </div>
    </div>


    <partial name="@MvcComponents.SharedPartialButtonsBackSubmit" 
             model=@(
                        new ButtonsBackSubmitViewModel()
                        {
                            Id = "submit-change-password",
                            SubmitLabel = _localizer[nameof(LocalizedStr.SharedButtonModify)],
                            HideBackButtonComponent = true,
                            BackButtonUrlType = BackUrlConfig.Missing,
                        })/>
</form>