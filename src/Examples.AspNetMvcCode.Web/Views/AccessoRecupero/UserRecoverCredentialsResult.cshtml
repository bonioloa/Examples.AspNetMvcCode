@inject IMainLocalizer _localizer
@inject IHtmlMainLocalizer _htmlLocalizer
@inject IAuthorizationCustomWeb _webAuthorizationCustom

@{
    Layout = MvcComponents.TemplatePanelPageFile;

    ViewData.SetTitle(_localizer[nameof(LocalizedStr.SharedWarningTitleSuccessGeneric)]);
    ViewData.SetLogo(InfoAndLogo.CentralPanelLogoTenant);
    ViewData.SetShowLanguageSelector(false);
    //necessary to hide, because changing language will reload page
    //and page will throw error because tempdata with the necessary result data are gone
    ViewData.SetUseCaptcha(false);
}
@section styles
{
}
@section scripts
{
}

<div class="row row-line-after ">
    <div class="col s12 m12 l12 xl12 ">
        <h5 class="simple-panel-title">@_localizer[nameof(LocalizedStr.SharedWarningTitleSuccessGeneric)]</h5>
    </div>
</div>

<div class="row row-line-after ">
    <div class="col s12 m12 l12 xl12 ">
        @if (await _webAuthorizationCustom.TenantHasRegisteredConfigAsync())
        {
            @_htmlLocalizer[nameof(HtmlLocalization.UserRecoverCredentialsResultSuccessMessageRegistered)]
        }
    
        @if (await _webAuthorizationCustom.TenantHasAnonymousConfigAsync())
        {
            @_htmlLocalizer[nameof(HtmlLocalization.UserRecoverCredentialsResultSuccessMessageAnonymous)]
        }
    </div>
</div>

<div class="row row-line-x2-before row-no-line-after ">
    <div class="col s12 m12 l12 xl12 ">
        @await Component.InvokeAsync(
            typeof(BackUrlComp)
            , new BackUrlConfigViewModel(BackUrlConfig.TenantLogin)
        )
    </div>
</div> 