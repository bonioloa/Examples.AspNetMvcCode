@model UserRegistrationViewModel

@inject IMainLocalizer _localizer
@inject IHtmlMainLocalizer _htmlLocalizer

@{
    Layout = MvcComponents.TemplatePanelPageFile;

    ViewData.SetTitle(_localizer[nameof(LocalizedStr.UserRegistrationFormPageTitle)]);
    ViewData.SetLogo(InfoAndLogo.CentralPanelLogoTenant);
    ViewData.SetShowLanguageSelector(true);
    ViewData.SetUseCaptcha(true);
}
@section styles
{
}
@section scripts
{
    <partial name="@MvcComponents.SharedPartialIncludeMinifiableLocalFile" 
             model=@(new IncludeLocalFilesViewModel() 
                         { 
                             Type = IncludeType.Javascript
                             , BasePath = PathsStaticFilesRoot.AppPathScriptsPages
                             , FileName= "register"
                         })/>
}


<div class="row row-line-before row-no-line-after">
    <div class="col xl12 l12 m12 s12">
        @_htmlLocalizer[nameof(HtmlLocalization.UserRegistrationFormHtmlInfo)]
    </div>
</div>

@*form validation rules handled by javascript*@
<form asp-controller="@MvcComponents.CtrlAccessRegistration" 
      asp-action="@MvcComponents.ActRegistrationPost"
      asp-antiforgery="true"
      method="post" name="registerForm"
      id="form-captcha-protected"
      class = ""
      autocomplete="off">

    <div class="row row-no-line-after">
        <div class="input-field col xl12 l12 m12 s12">

            @await Component.InvokeAsync(
                typeof(FieldInputTextSimpleComp)
                , new FieldViewModel()
                    {
                        FieldType = FieldType.InputTextSimple,
                        InputSimpleType = InputSimpleType.Text,
                        FieldName = nameof(Model.Login),
                        HideMandatorySymbol = true,
                        Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldUserLogin)]),
                        Value = Model.Login,
                    }
            )
        </div>
    </div>



    <div class="row row-no-line-after">

        <div class="input-field col xl6 l6 m6 s12">

            @await Component.InvokeAsync(
                typeof(FieldInputTextSimpleComp)
                , new FieldViewModel()
                    {
                        FieldType = FieldType.InputTextSimple,
                        InputSimpleType = InputSimpleType.Password,
                        FieldName = nameof(Model.Password),
                        HideMandatorySymbol = true,
                        Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldPassword)]),
                        Value = Model.Password,
                    }
            )
        </div>

        <div class="input-field col xl6 l6 m6 s12">

            @await Component.InvokeAsync(
                typeof(FieldInputTextSimpleComp)
                , new FieldViewModel()
                    {
                        FieldType = FieldType.InputTextSimple,
                        InputSimpleType = InputSimpleType.Password,
                        FieldName = nameof(Model.ConfirmPassword),
                        HideMandatorySymbol = true,
                        Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldConfirmPassword)]),
                        Value = Model.ConfirmPassword,
                    }
            )
        </div>
    </div>


    <div class="row row-no-line-after">
        <div class="input-field col xl6 l6 m6 s12">

            @await Component.InvokeAsync(
                typeof(FieldInputTextSimpleComp)
                , new FieldViewModel()
                    {
                        FieldType = FieldType.InputTextSimple,
                        InputSimpleType = InputSimpleType.Text,
                        FieldName = nameof(Model.Nome),
                        HideMandatorySymbol = true,
                        Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldName)]),
                        Value = Model.Nome,
                    }
            )
        </div>

        <div class="input-field col xl6 l6 m6 s12">

            @await Component.InvokeAsync(
                typeof(FieldInputTextSimpleComp)
                , new FieldViewModel()
                    {
                        FieldType = FieldType.InputTextSimple,
                        InputSimpleType = InputSimpleType.Text,
                        FieldName = nameof(Model.Cognome),
                        HideMandatorySymbol = true,
                        Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldSurname)]),
                        Value = Model.Cognome,
                    }
            )
        </div>
    </div>


    <div class="row row-no-line-after">
        <div class="input-field col xl12 l12 m12 s12">

            @await Component.InvokeAsync(
                typeof(FieldInputTextSimpleComp)
                , new FieldViewModel()
                    {
                        FieldType = FieldType.InputTextSimple,
                        InputSimpleType = InputSimpleType.Email,
                        FieldName = nameof(Model.Email),
                        HideMandatorySymbol = true,
                        Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldEmail)]),
                        Value = Model.Email,
                    }
            )
        </div>
    </div>

    
    @await Component.InvokeAsync(typeof(CaptchaComp))


    <partial name="@MvcComponents.SharedPartialButtonsBackSubmit" 
             model=@(
                        new ButtonsBackSubmitViewModel()
                        {
                            Id = "submit-register-user",
                            SubmitLabel = _localizer[nameof(LocalizedStr.UserRegistrationFormSubmit)],
                            HideBackButtonComponent = false,
                            BackButtonUrlType = BackUrlConfig.TenantLogin,
                        })/>
</form>