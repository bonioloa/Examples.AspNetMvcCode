@model ReportExportViewModel

@inject ContextUser _contextUser
@inject MainLocalizer _localizer
@inject HtmlMainLocalizer _htmlLocalizer
@inject IOptionsSnapshot<ProductSettings> _optProduct

@{
    Layout = MvcComponents.TemplateSecureAreaInnerGenericFile;

    ViewData.SetTitle(_localizer[nameof(LocalizedStr.ReportAdvancedPageTitle)]);

    ViewData.SetUseGridExportToFile(true);

    IDictionary<string, string> routeVars = new Dictionary<string, string>();

    string saveGridStateUrl = Url.Action(MvcComponents.ActReportingAdvancedSaveLayout, MvcComponents.CtrlReporting);
    string loadGridStateUrl = Url.Action(MvcComponents.ActReportingAdvancedLoadLayout, MvcComponents.CtrlReporting);
}
@section styles
{   
}
@section scripts
{
    @*grid export scripts are included in layout using flag ViewData.SetUseGridExportToFile*@

    <script> 
        var SharedVarsFormDynamic = Immutable.Map({
            'SaveGridStateUrl': '@saveGridStateUrl',
            'LoadGridStateUrl': '@loadGridStateUrl'
        });
        var DataGridViewLoadList = @JsonSerializer.Serialize(Model.AvailableGridStateForLoadList)
    </script>

    <partial name="@MvcComponents.SharedPartialIncludeMinifiableLocalFile" 
             model=@(new IncludeLocalFilesViewModel() 
                         { 
                             Type = IncludeType.Javascript
                             , BasePath = WebAppConstants.AppPathScriptsPages
                             , FileName= "report-advanced"
                         })/>
}


<partial name="@MvcComponents.SharedPartialTitlePageInSecureArea" 
         model="@_localizer[nameof(LocalizedStr.ReportAdvancedPageTitle)].ToString()"/>


<form asp-controller="@MvcComponents.CtrlReporting"
      asp-action="@MvcComponents.ActReportingAdvanced"
      method="get"
      autocomplete="off"> @*get does not need anti forgery*@

    <div class="row row-no-line-after">
        <div class="input-field col s12 m12 l12 xl12">            
            @{
                InputControlViewModel selectProcess = new InputControlViewModel()
                {
                    ControlType = FormControlType.OptionsSelect,
                    FieldName = ParamsNames.ProcessId,
                    ChoiceOptions = Model.ProcessSelect,
                    Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldLabelProcess)]),
                    IsMandatory = true,
                };
            }
            <vc:input-select input-model="selectProcess">
            </vc:input-select>
        </div>
    </div>


    
    <div class="row row-line-after">
        <div class="input-field col s12 m6 l6 xl6">
            @{
                InputControlViewModel inputDateSubmitFrom = new InputControlViewModel()
                {
                    ControlType = FormControlType.InputDate,
                    FieldName = ParamsNames.DateSubmitFrom,
                    Value = Model.DateSubmitFrom.ToStringDateSortableInvariant(),                   
                    Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldLabelDateSubmitFrom)]),
                };
            }
            <vc:input-date input-model="inputDateSubmitFrom">
            </vc:input-date>
        </div>

        <div class="input-field col s12 m6 l6 xl6">
            @{
                InputControlViewModel inputDateSubmitTo = new InputControlViewModel()
                {
                    ControlType = FormControlType.InputDate,
                    FieldName = ParamsNames.DateSubmitTo,
                    Value = Model.DateSubmitTo.ToStringDateSortableInvariant(),
                    Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldLabelDateSubmitTo)]),
                };
            }
            <vc:input-date input-model="inputDateSubmitTo">
            </vc:input-date>
        </div>
    </div>



    @if(Model.EnableDateExpirationFilter)
    {
        <div class="row row-line-after">
            <div class="input-field col s12 m6 l6 xl6">
                @{
                    InputControlViewModel inputDateExpirationFrom = new InputControlViewModel()
                    {
                        ControlType = FormControlType.InputDate,
                        FieldName = ParamsNames.DateExpirationFrom,
                        Value = Model.DateExpirationFrom.ToStringDateSortableInvariant(),
                   
                        Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldLabelDateExpirationFrom)]),
                    };
                }
                <vc:input-date input-model="inputDateExpirationFrom">
                </vc:input-date>
            </div>

            <div class="input-field col s12 m6 l6 xl6">
                @{
                    InputControlViewModel inputDateExpirationTo = new InputControlViewModel()
                    {
                        ControlType = FormControlType.InputDate,
                        FieldName = ParamsNames.DateExpirationTo,
                        Value = Model.DateExpirationTo.ToStringDateSortableInvariant(),
                        Description = new HtmlString(_localizer[nameof(LocalizedStr.SharedFieldLabelDateExpirationTo)]),
                    };
                }
                <vc:input-date input-model="inputDateExpirationTo">
                </vc:input-date>
            </div>
        </div>
    }

    <div class="row row-line-after">
        <div class="input-field col s12 m12 l12 xl12">
            @{
                InputControlViewModel inputRadioForLinkedItems = 
                    new InputControlViewModel()
                    {
                        ControlType = FormControlType.OptionsRadio,
                        FieldName = ParamsNames.AddLinkedItemsToResults,
                        ChoiceOptions = 
                            new List<OptionViewModel>
                            {
                                new OptionViewModel
                                {
                                    Value = AppConstants.OptionAffirmativeValue,
                                    Description = _htmlLocalizer[nameof(HtmlLocalization.SharedLabelPositive)],
                                    Selected = Model.LinkedItemsToResults,
                                },
                                new OptionViewModel
                                {
                                    Value = AppConstants.OptionNegativeValue,
                                    Description = _htmlLocalizer[nameof(HtmlLocalization.SharedLabelNegative)],
                                    Selected = !Model.LinkedItemsToResults,
                                }
                            },
                        Description = _htmlLocalizer[nameof(HtmlLocalization.ReportFilterRegistrationsLinkedDataLabel)],
                    };
            }
            <vc:input-radio input-model="inputRadioForLinkedItems">
            </vc:input-radio>
        </div>
    </div>

    @*javascript will enable this button only when one process apart from Tutti will be selected*@
    @{ 
        ButtonsBackSubmitViewModel statisticsBtnModel = new ButtonsBackSubmitViewModel()
        {
            Id = "btn-get-report-advanced-for-process",
            SubmitLabel = _localizer[nameof(LocalizedStr.ReportAdvancedButton)],
            HideBackButtonComponent = true,
            BackButtonUrlType = BackUrlConfig.Missing, //back button is hidden
        };
    }
    <partial name="@MvcComponents.SharedPartialButtonsBackSubmit" 
             model=@statisticsBtnModel/>
</form>


@if(Model.ShowMessageNoResultsFound)
{
    <div id="report-no-results-warning"
            class="row row-line-x2-before row-line-x2-after">
        <div class="col s12 m12 l12 xl12 site-color-warn">        
            @_localizer[nameof(LocalizedStr.SharedReportMessageNoResults)]
        </div>
    </div>
}
@if(!Model.ShowMessageNoResultsFound 
    && !Model.FilterPreloadCall
    && Model.DataSourceGrid.StringHasValue())
{
     @*usiamo qui le icone di dev express perché le icone material non hanno tutte le tipologie necessarie*@
    <div class="row row-line-x2-before row-line-after">


        @*save grid state*@
        <div class="col s12 m6 l3 xl3"> 
            @{
                string saveGridStateModalId = "modal-save-grid-state";
                ModalTriggerViewModel saveGridStateModalTriggerModel = new ModalTriggerViewModel()
                {
                    ModalId = saveGridStateModalId,
                    Description = _localizer[nameof(LocalizedStr.DataGridViewStateSave)].ToString(),
                    AdditionalClasses = new List<string>() { "center-on-small-only"},//"minimal-margins", 
                    ShowAsButton = true,
                    //IsPrimaryButton = true,
                    //IconCode = WebAppConstants.HtmlCodeGroupAdd,
                    //IconClasses = new List<string>() {"medium" },
                    TooltipDescription = _localizer[nameof(LocalizedStr.DataGridViewStateSave)].ToString(),
                };
            }
           
	        <vc:modal-trigger model="saveGridStateModalTriggerModel">
            </vc:modal-trigger>

            <materialize-modal id="@saveGridStateModalId" 
                                title="@_localizer[nameof(LocalizedStr.DataGridViewStateSave)].ToString()">

                <form id="salva-stato-griglia-form"
                      class="ajax-post"
                      asp-antiforgery="true" 
                      method="post"
                      autocomplete="off">

                    <div class="row row-line-before row-line-after">
                        <div class="col s12 m12 l12 xl12"> 
                            <vc:input-text-area input-model="
                                new InputControlViewModel()
                                { 
                                    ControlType = FormControlType.InputTextArea,
                                    FieldName = ParamsNames.DataGridViewStateDescription,
                                    CharactersLimit = 200,//non eccedere 500 settato su db
                                    IsMandatory = true,
                                    UseFixedLabel = true,
                                    Description = _htmlLocalizer[nameof(HtmlLocalization.DataGridViewStateDescriptionSave)],
                                }">
                            </vc:input-text-area>
                        </div>
                    </div>



                    <div class="row row-line-before row-line-after">
                        <div class="col s12 m12 l12 xl12"> 
                            <vc:input-radio input-model="
                                new InputControlViewModel()
                                {
                                    ControlType = FormControlType.OptionsRadio,
                                    IsMandatory = true,
                                    FieldName = ParamsNames.DataGridViewStateChooseIfSaveIsForAllProfiles,
                                    ChoiceOptions = 
                                        new List<OptionViewModel>
                                        {
                                            new OptionViewModel
                                            {
                                                Value = AppConstants.OptionNegativeValue,
                                                Description = _htmlLocalizer[nameof(HtmlLocalization.SharedLabelNegative)],
                                            },
                                            new OptionViewModel
                                            {
                                                Value = AppConstants.OptionAffirmativeValue,
                                                Description = _htmlLocalizer[nameof(HtmlLocalization.SharedLabelPositive)],
                                            }
                                        },
                                    Description = _htmlLocalizer[nameof(HtmlLocalization.DataGridViewStateChooseIfSaveIsPersonal)],
                                }">
                            </vc:input-radio>
                        </div>
                    </div>


                    @{ 
                        ButtonsBackSubmitViewModel saveGridStateSubmitButtonModel = new ButtonsBackSubmitViewModel()
                        {
                            Id = "modal-save-grid-state-submit",
                            SubmitLabel = _localizer[nameof(LocalizedStr.DataGridViewStateSaveSubmit)],
                            SubmitDisabled = false,
                            HideBackButtonComponent = true,
                            BackButtonUrlType = BackUrlConfig.Missing,
                        };
                    }
                    <partial name="@MvcComponents.SharedPartialButtonsBackSubmit" 
                             model=@saveGridStateSubmitButtonModel/>
                </form>

            </materialize-modal>
        </div>


        @* load grid state*@
        <div class="col s12 m6 l3 xl3"> 
            
            <vc:input-select input-model="control">
            </vc:input-select>

            @{
                string loadGridStateModalId = "modal-load-grid-state";
                ModalTriggerViewModel loadGridStateModalTriggerModel = new ModalTriggerViewModel()
                {
                    ModalId = loadGridStateModalId,
                    Description = _localizer[nameof(LocalizedStr.DataGridViewStateLoad)].ToString(),
                    AdditionalClasses = new List<string>() { "center-on-small-only"},//"minimal-margins", 
                    ShowAsButton = true,
                    //IsPrimaryButton = true,
                    //IconCode = WebAppConstants.HtmlCodeGroupAdd,
                    //IconClasses = new List<string>() {"medium" },
                    TooltipDescription = _localizer[nameof(LocalizedStr.DataGridViewStateLoad)].ToString(),
                };
            }
	        <vc:modal-trigger model="loadGridStateModalTriggerModel">
            </vc:modal-trigger>
            <br/>
            <div>Vista attualmente utilizzata:</div>
            <br/>
            <div id="desc-vista-corrente"></div>

            <materialize-modal id="@loadGridStateModalId" 
                                title="@_localizer[nameof(LocalizedStr.DataGridViewStateLoad)].ToString()">

                <form id="carica-stato-griglia-form"
                      class="ajax-post"
                      asp-antiforgery="true" 
                      method="post"
                      autocomplete="off">

                    <div class="row row-line-before row-line-after">
                        <div class="col s12 m12 l12 xl12"> 
                            <vc:input-select input-model="
                                new InputControlViewModel()
                                { 
                                    ControlType = FormControlType.OptionsSelect,
                                    FieldName = ParamsNames.DataGridLoadStateChoose,
                                    IsMandatory = true,
                                    UseFixedLabel = true,
                                    Description = _htmlLocalizer[nameof(HtmlLocalization.DataGridViewStateDescriptionLoadFromList)],
                                    //ChoiceOptions = Model.AvailableGridStateForLoadList,options will be handled by javascript
                                }">
                            </vc:input-select>
                        </div>
                    </div>


                    @{ 
                        ButtonsBackSubmitViewModel loadGridStateSubmitButtonModel = new ButtonsBackSubmitViewModel()
                        {
                            Id = "modal-load-grid-state-submit",
                            SubmitLabel = _localizer[nameof(LocalizedStr.DataGridViewStateLoadSubmit)],
                            SubmitDisabled = false,
                            HideBackButtonComponent = true,
                            BackButtonUrlType = BackUrlConfig.Missing,
                        };
                    }
                    <partial name="@MvcComponents.SharedPartialButtonsBackSubmit" 
                             model=@loadGridStateSubmitButtonModel/>
                </form>

            </materialize-modal>
        </div>
    </div>
    <partial name="@MvcComponents.PartialDataGridReportAdvanced" 
             model=@Model/>
}